#!/usr/bin/env ruby

$:.unshift File.expand_path('../../lib', __FILE__)
require 'imap_notifier'
require 'optparse'

opts = {}

opt_parser = OptionParser.new do |opt|
  opt.banner   = "Usage: #{opt.program_name} [OPTIONS]"
  opt.program_name = "IMAP Notifier"
  opt.separator  "Options:"
  opt.on('-h', '--help', 'Display this message') do
    puts opt_parser
    exit
  end

  opt.on('-V', '--version', "Display '#{opt.program_name} #{IMAP_Notifier::VERSION}' and exit") do
    puts opt.program_name << ' ' << IMAP_Notifier::VERSION
    exit
  end

  opt.on('-v', '--debug', "Write debug output into #{DEBUGFILE}") do
    opts[:debug] = true
  end

  opt.on('-f', '--file FILE', "Read configuration file.\t[DEFAULT: ~/.imap_notifier]") do |c|
    opts[:config] = c
  end

  opt.on('-s','--server STR', "Specify imap server.\t[Default: #{IMAP_SERVER}]") do |s|
    opts[:server] = s
  end

  opt.on('-d','--domain STR',
      "Specify email domain.\t[Default: #{@imap_server.split('.').pop(2).join('.')}]") do |d|
    opts[:domain] = d.gsub(/.+\@/,'')
  end

  opt.on('-u','--user STR', "Specify user login.\t[Default: ENV['USER']]") do |u|
    opts[:user] = u
  end

  opt.on('-m','--max INT', "Group notify on N or more mails. [Default: #{MAX_MAIL}]") do |m|
    opts[:max] = m.to_i
  end

  opt.on('-k', '--kill', "Kill currently running #{opt.program_name} process with SIGINT") do
    IMAP_Notifier.kill_process
    exit
  end
end

opt_parser.parse!

if File.exists?(PIDFILE) && IO.readlines(PIDFILE).any?
  puts "#{PIDFILE} already exists -- Exiting..."
  exit -1
end

IMAP_Notifier.new(opts)
